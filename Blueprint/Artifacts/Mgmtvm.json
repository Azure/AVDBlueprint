{
  "kind": "template",
  "type": "Microsoft.Blueprint/blueprints/artifacts",
  "name": "Mgmtvm",
  "properties": {
    "displayName": "Management VM",
    "description": "Management VM",
    "dependsOn": [
      "wvdTestUsers"
    ],
    "template": {
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "resourcePrefix": {
        "type": "string",
        "metadata": {
          "displayName": "Resource Prefix"
        }
      },
      "_artifactsLocationSasToken": {
        "type": "securestring",
        "metadata": {
          "description": "Auto-generated token to access _artifactsLocation. Leave it blank unless you need to provide your own value."
        },
        "defaultValue": ""
      },
      "baseTime": {
        "type": "string",
        "defaultValue": "[utcNow('u')]"
      },
      "mgmtvmNameStatic": {
        "type": "string",
        "defaultValue": "-mgmtvm"
      },
      "dnsLabelPrefix": {
        "type": "string",
        "metadata": {
          "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
        },
        "defaultValue": "[concat(toLower(parameters('resourcePrefix')), parameters('mgmtvmNameStatic'))]"
      },
      "DAUser_domainadmin": {
        "type": "string",
        "metadata": {
          "description": "The managed domain, domain admin account"
        }
      },
      "vaultName": {
        "type": "string",
        "metadata": {
          "description": "The name of the keyvault that contains the secret."
        },
        "defaultValue": "[concat(parameters('resourcePrefix'), '-sharedsvcs-kv')]"
      },
      "KVsecretName": {
        "type": "string",
        "metadata": {
          "description": "The name of the Key Vault secret."
        },
        "defaultValue": "[first(split(parameters('DAUser_domainadmin'), '@'))]"
      },
      "vaultResourceGroupName": {
        "type": "string",
        "metadata": {
          "description": "The name of the resource group that contains the keyvault."
        },
        "defaultValue": "[resourceGroup().name]"
      },
      "vaultSubscription": {
        "type": "string",
        "defaultValue": "[subscription().subscriptionId]",
        "metadata": {
          "description": "The name of the subscription that contains the keyvault."
        }
      },
      "ADDS_domainName": {
        "type": "string",
        "metadata": {
          "displayName": "Azure ADDS Domain"
        }
      },
      "ouPath": {
        "type": "string",
        "metadata": {
            "description": "OUPath for the domain join"
        }        
      },
      "existingVnetName": {
        "type": "string",
        "metadata": {
          "description": "The name of the virtual network the VMs will be connected to."
        },
        "defaultValue": ""
      },
      "existingSubnetName": {
        "type": "string",
        "metadata": {
          "description": "The subnet the VMs will be placed in."
        },
        "defaultValue": ""
      },
      "vmSize": {
        "type": "string",
        "metadata": {
          "description": "The size of the Azure VM."
        },
        "defaultValue": ""
      },
      "vmAdminUsername": {
        "type": "string",
        "defaultValue": "mgmtvm-admin",
        "metadata": {
          "description": "The name of the administrator of the management VM. Exclusion list: 'admin','administrator"
        }
      },
      "vmAdminPassword": {
        "type": "securestring",
        "defaultValue": "P@ssw0rd!P@ssw0rd!",
        "metadata": {
          "description": "The password for the administrator account of the management VM"
        }
      },
      "virtualNetworkResourceGroupName": {
        "type": "string",
        "metadata": {
          "description": "The resource group containing the existing virtual network."
        },
        "defaultValue": "[resourceGroup().name]"
      },
      "createNetworkSecurityGroup": {
        "type": "bool",
        "metadata": {
          "description": "Whether to create a new network security group or use an existing one"
        },
        "defaultValue": false
      },
      "usePublicIP": {
        "type": "bool",
        "metadata": {
          "description": "Whether to use a Public IP"
        },
        "defaultValue": true
      },
      "publicIpAddressSku": {
        "type": "string",
        "metadata": {
          "description": "The sku name of the Public IP"
        },
        "allowedValues": [
          "Basic",
          "Standard"
        ],
        "defaultValue": "Basic"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "ScriptBaseURI":{
        "type": "string"
      }
    },
    "variables": {
      "storageAccountName": "[concat(uniquestring(resourceGroup().id, deployment().name))]",
      "deployment-prefix": "[concat(parameters('resourcePrefix'), '-sharedsvcs')]",
      "key-vault-name": "[concat(variables('deployment-prefix'), '-kv')]",
      "key-vault-resourceID": "[resourceId('Microsoft.KeyVault/vaults', variables('key-vault-name'))]",
      "InstallRSATTools-extension-name": "InstallRSATTools",
      "existingDomainUsername": "[first(split(parameters('DAUser_domainadmin'), '@'))]",
      "managedDomaintoJoin": "[parameters('ADDS_domainName')]",
      "imagePublisher": "MicrosoftWindowsServer",
      "imageOffer": "WindowsServer",
      "windowsOSVersion": "2019-Datacenter",
      "resourceGroup": "[resourceGroup().name]",
      "nicName": "[concat(parameters('resourcePrefix'),parameters('mgmtvmNameStatic'),string('-nic'))]",
      "publicIPName": "[concat(parameters('resourcePrefix'),parameters('mgmtvmNameStatic'),string('-pip'))]",
      "location": "[parameters('location')]",
      "subnetId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), parameters('existingSubnetName'))]"
    },
    "resources": [
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPName')]",
        "location": "[parameters('location')]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic",
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsLabelPrefix')]"
          }
        }
      },
      {
        "apiVersion": "2015-06-15",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]"
                },
                "subnet": {
                  "id": "[variables('subnetId')]"
                }
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[variables('storageAccountName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Standard_LRS"
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2019-07-01",
        "name": "[parameters('dnsLabelPrefix')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts',variables('storageAccountName'))]",
          "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
        ],
        "properties": {
            "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
            },
            "osProfile": {
            "computerName": "[parameters('dnsLabelPrefix')]",
            "adminUsername": "[parameters('vmAdminUsername')]",
            "adminPassword": "[parameters('vmAdminPassword')]",
            "windowsConfiguration": {
              "enableAutomaticUpdates": true
            }
            },
            "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[variables('windowsOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
                 "createOption": "FromImage",
                 "name": "[concat(parameters('dnsLabelPrefix'), '-OsDisk')]",
                 "managedDisk": {
                "storageAccountType": "StandardSSD_LRS"
                }
            },
            "dataDisks": [
              {
                "name": "[concat(parameters('dnsLabelPrefix'),'-DataDisk1')]",
                "diskSizeGB": 1023,
                "lun": 0,
                "createOption": "Empty"
              }
            ]
            },
            "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
              }
            ]
            },
            "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": false,
              "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob]"
            }
            
            },
            "licenseType": "Windows_Server"
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "apiVersion": "2019-07-01",
        "name": "[concat(parameters('dnsLabelPrefix'),'/', variables('InstallRSATTools-extension-name'))]",
        "location": "[variables('location')]",
        "dependsOn": [
          "MGMTVMjoindomain"
        ],
        "properties": {
          "publisher": "Microsoft.Compute",
          "type": "CustomScriptExtension",
          "typeHandlerVersion": "1.7",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": [
              "[concat(parameters('ScriptBaseURI'),'/Create-AzAADDSJoinedFileshare.ps1')]"
            ],
            "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File Create-AzAADDSJoinedFileshare.ps1 -ResourceGroupName ' , resourceGroup().name, ' -StorageAccountName ', parameters('resourcePrefix'), 'profilestore')]"
          }
        }
      },
      {
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-10-01",
        "name": "MGMTVMjoindomain",
        "dependsOn": [
          "[resourceId('Microsoft.Compute/virtualMachines/extensions/', parameters('dnsLabelPrefix'), variables('InstallRSATTools-extension-name'))]"
        ],
        "properties": {
          "mode": "Incremental",
          "expressionEvaluationOptions": {
            "scope": "inner"
          },
          "parameters": {
            "location": {
              "value": "[parameters('location')]"
            },
            "vmname": {
              "value": "[parameters('dnsLabelPrefix')]"
            },
            "domainToJoin": {
              "value": "[variables('managedDomaintoJoin')]"
            },
            "mvOUPath": {
              "value": "[parameters('ouPath')]"
            },
            "mvUser": {
              "value": "[parameters('DAUser_domainadmin')]"
            },
            "kvSub": {
              "value": "[parameters('vaultSubscription')]"
            },
            "kvRG": {
              "value": "[resourceGroup().name]"
            },
            "kvName": {
              "value": "[parameters('vaultName')]"
            },
            "domainadminPassword": {
              "reference": {
                "keyVault": {
                  "id": "[resourceId('Microsoft.KeyVault/vaults', parameters('vaultName'))]"
                },
                "secretName": "[parameters('KVsecretName')]"
              }
            }
          },
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "domainadminPassword": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "vmname": {
                "type": "string"
              },
              "mvOUPath": {
                "type": "string"
              },
              "mvUser": {
                "type": "string"
              },
              "kvSub": {
                "type": "string"
              },
              "kvRG": {
                "type": "string"
              },
              "kvName": {
                "type": "string"
              },
              "domainToJoin": {
                "type": "string"
              }
            },
            "variables": {},
            "resources": [
              {
                "apiVersion": "2018-10-01",
                "type": "Microsoft.Compute/virtualMachines/extensions",
                "name": "[concat(parameters('vmname'),'/joindomain')]",
                "location": "[parameters('location')]",
                "dependsOn": [],
                "properties": {
                  "publisher": "Microsoft.Compute",
                  "type": "JsonADDomainExtension",
                  "typeHandlerVersion": "1.3",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "name": "[parameters('domainToJoin')]",
                    "ouPath": "[parameters('mvOUPath')]",
                    "user": "[parameters('mvUser')]",
                    "Restart": "true",
                    "Options": "3"
                    
                  },
                  "protectedSettings": {
                    "password": "[parameters('domainadminPassword')]"
                  }
                }
            }
            ]
          }
        }
      }
    ],   
    "outputs": {
      "Name": {
        "type": "string",
        "value": "[variables('managedDomaintoJoin')]"
      },
      "User": {
        "type": "string",
        "value": "[variables('existingDomainUsername')]"
      },
      "KeyVaultID": {
        "type": "string",
        "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('vaultName'))]"
      }
  }
}, 
  "resourceGroup": "ResourceGroup",
  "parameters": {
    "ADDS_domainName": {
      "value": "[parameters('ADDS_domainName')]"
    },
    "ouPath": {
      "value": ""
    },
    "DAUser_domainadmin": {
      "value": "[parameters('DAUser_domainadmin')]"
    },
    "resourcePrefix": {
      "value": "[parameters('resourcePrefix')]"
    },
    "location": {
      "value": "[resourceGroup().location]"
    },
    "createNetworkSecurityGroup": {
      "value": false
    },
    "vmSize": {
      "value": "Standard_D2s_v3"
    },
    "existingVnetName": {
      "value": "[parameters('ADDS_vnetName')]"
    },
    "existingSubnetName": {
      "value": "sharedsvcs"
    },
    "virtualNetworkResourceGroupName": {
      "value": "[resourceGroup().name]"
    },
    "usePublicIP": {
      "value": true
    },
    "ScriptBaseURI": {
      "value": "[parameters('_ScriptURI')]"
    }
    }
 }
}
